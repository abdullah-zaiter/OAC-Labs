DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : 00a00293;   % 2: 	li	t0, 10			########### Programa de teste das instruções da ISA RV32IM ###########	 %
00000001 : 00700313;   % 3: 	li	t1, 7 %
00000002 : 04600393;   % 4: 	li	t2, 70			########### Bloco de teste de instruções do módulo MUL/DIV ########### %
00000003 : 02628e33;   % 5: 	mul	t3, t0, t1 %
00000004 : 007e0463;   % 6: 	beq	t3, t2, pulo1		# MUL # %
00000005 : 120000ef;   % 7: 	jal	ra, ERRO %
00000006 : 0262ce33;   % 8: 	pulo1:	div	t3, t0, t1	# DIV # %
00000007 : 00100393;   % 9: 		li	t2, 1 %
00000008 : 01c38463;   % 10: 		beq	t2, t3, pulo2 %
00000009 : 110000ef;   % 11: 		jal	ra, ERRO %
0000000a : 0262ee33;   % 12: 	pulo2:	rem	t3, t0, t1	# REM # %
0000000b : 00300393;   % 13: 		li	t2, 3 %
0000000c : 01c38463;   % 14: 		beq	t2, t3, pulo3 %
0000000d : 100000ef;   % 15: 		jal	ra, ERRO %
0000000e : 02629e33;   % 16: 	pulo3:	mulh	t3, t0, t1	# MULH # %
0000000f : 000e0463;   % 17: 		beq	t3, zero, pulo4 %
00000010 : 0f4000ef;   % 18: 		jal	ra, ERRO %
00000011 : 005282b3;   % 20: 		add	t0, t0, t0	# ADD # %
00000012 : 01400393;   % 21: 		li	t2, 20 %
00000013 : 00728463;   % 22: 		beq	t0, t2, pulo5 %
00000014 : 0e4000ef;   % 23: 		jal	ra, ERRO %
00000015 : 406282b3;   % 24: 	pulo5:	sub	t0, t0, t1	# SUB # %
00000016 : 00d00393;   % 25: 		li	t2, 13 %
00000017 : 00728463;   % 26: 		beq	t0, t2, pulo6 %
00000018 : 0d4000ef;   % 27: 		jal	ra, ERRO %
00000019 : 00f00293;   % 28: 	pulo6:	li	t0, 0x0F	# AND # %
0000001a : 0f000313;   % 29: 		li	t1, 0xF0 %
0000001b : 0062f2b3;   % 30: 		and	t0, t0, t1 %
0000001c : 0ff00393;   % 31: 		li	t2, 0xFF %
0000001d : 00028463;   % 32: 		beq	t0, zero, pulo7 %
0000001e : 0bc000ef;   % 33: 		jal	ra, ERRO %
0000001f : 00f00293;   % 34: 	pulo7: 	li	t0, 0x0F	# OR # %
00000020 : 0062e2b3;   % 35: 		or	t0, t0, t1 %
00000021 : 00728463;   % 36: 		beq	t0, t2, pulo8 %
00000022 : 0ac000ef;   % 37: 		jal	ra, ERRO %
00000023 : 00a00293;   % 38: 	pulo8:	li	t0, 0xA		# XOR # %
00000024 : 00500313;   % 39: 		li	t1, 0x5 %
00000025 : 00f00393;   % 40: 		li	t2, 0xF %
00000026 : 0062c2b3;   % 41: 		xor	t0, t0, t1 %
00000027 : 00728463;   % 42: 		beq	t0, t2, pulo9 %
00000028 : 094000ef;   % 43: 		jal	ra, ERRO %
00000029 : 005322b3;   % 44: 	pulo9:	slt	t0, t1, t0	# SLT # %
0000002a : 00100313;   % 45: 		li	t1, 1 %
0000002b : 00628463;   % 46: 		beq	t0, t1, pulo10 %
0000002c : 084000ef;   % 47: 		jal	ra, ERRO %
0000002d : 00100293;   % 48: 	pulo10:	li	t0, 1		# SLL # %
0000002e : 00400313;   % 49: 		li	t1, 4 %
0000002f : 01000393;   % 50: 		li	t2, 16 %
00000030 : 006292b3;   % 51: 		sll	t0, t0, t1 %
00000031 : 00728463;   % 52: 		beq	t0, t2, pulo11 %
00000032 : 06c000ef;   % 53: 		jal	ra, ERRO		 %
00000033 : 0062d2b3;   % 54: 	pulo11: srl	t0, t0, t1	# SRL # %
00000034 : 00100393;   % 55: 		li	t2, 1 %
00000035 : 00728463;   % 56: 		beq	t0, t2, pulo12 %
00000036 : 05c000ef;   % 57: 		jal	ra, ERRO %
00000037 : 00a00293;   % 59: 		li	t0, 10	 %
00000038 : 00a00313;   % 60: 		li	t1, 10 %
00000039 : 00029463;   % 61: 		bne	t0, x0, pulo13	# BNE # %
0000003a : 04c000ef;   % 62: 		jal	ra, ERRO %
0000003b : 00504463;   % 63: 	pulo13:	blt	x0, t0, pulo14	# BLT # %
0000003c : 044000ef;   % 64: 		jal	ra, ERRO %
0000003d : ffa00293;   % 65: 	pulo14:	li	t0, -6 %
0000003e : 00505463;   % 66: 		bltu	x0, t0, pulo15 	# BLTU #		# Nao colocamos o BGE pois da erro na montagem # %
0000003f : 038000ef;   % 67: 		jal	ra, ERRO %
00000040 : 080002b7;   % 69: 		lui	t0, 0x8000	# LUI # %
00000041 : 01b2d293;   % 70: 		srli	t0, t0, 27 %
00000042 : 00100313;   % 71: 		li	t1, 1 %
00000043 : 00628463;   % 72: 		beq	t0, t1, pulo16 %
00000044 : 024000ef;   % 73: 		jal	ra, ERRO %
00000045 : 0ab00293;   % 74: 	pulo16:	li	t0, 0xAB	# SW e LW # %
00000046 : 00512023;   % 75: 		sw	t0, 0(sp) %
00000047 : 00012303;   % 76: 		lw	t1, 0(sp) %
00000048 : 00628463;   % 77: 		beq	t0, t1, pulo17 %
00000049 : 010000ef;   % 78: 		jal	ra, ERRO %
0000004a : 008000ef;   % 79: 	pulo17:	jal	ra, pulo_teste	# JALR # %
0000004b : 0100006f;   % 82: 	jal	zero, FIM %
0000004c : 00008067;   % 83: 	pulo_teste: jr	ra, 0 %
0000004d : ffc08293;   % 84: 	ERRO:	addi	t0, ra, -4	# Seta t0==ra-4 no caso de erro %
0000004e : 008000ef;   % 85: 		jal	FIM_ERRO %
0000004f : 00000293;   % 86: 	FIM:	addi	t0, zero, 0	# zera t0 se chegar ao final corretamente %
END;
